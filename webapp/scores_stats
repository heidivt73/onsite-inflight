

<!DOCTYPE html>
<html lang="en">
    <head>
        <meta charset="utf-8">
        <title>Onsite Interviews</title>
        <script type="text/javascript" src="http://d3js.org/d3.v3.min.js"></script>
        <script type="text/javascript" src="js/ajax.js"></script>
        <LINK href="css/onsite_inflight.css" type="text/css" rel="stylesheet">
    
    </head>
    <body>

      <div id="content" class="header-bar" style="height:1024px;padding-top:20px;">
        <SVG id="heatmap">
         </SVG> 
        <div id="tooltip" class="hidden">
        <p><strong></strong></p>
        <p><span id="value">100</span></p>
        </div>
       <p id="Cultural">Click for Avg Cultural Score</p>
       <p id="Technical">Click for Avg Technical Score</p>
    </div>  
  </div>

        <script type="text/javascript">

  
  //var svg = d3.select("#left").append("svg");
    var svg=d3.select("#heatmap");
      
  var w = 600;
  var h = 500;
  var padding = 40;  
        
  var TimeOfDay =[];
  var DayOfWeek = [];
  var DayTimeMatrix=[];
  var DayTimeMatrixFill = [];
  var max_score ;
  var min_score ;
  var max_sample_size;
  var score_of_interest ;
  
  var days_of_week = {
            'Mon' : 0,
            'Tue' : 1,
            'Wed' : 2,
            'Thu' : 3,
            'Fri' : 4,
            'Sat' : 5,
            'Sun' : 6
        }
 

   
         window.onload = function()
       {
           make_ajax_request("api/scores_by_time_stats?earliest_ts=0",update_DayTimeMatrix,  null);
         
           //update_DayTimeMatrix([{"Avg_Cultural_Score": 3.0, "Sample_Size": 3, "Avg_Technical_Score": 3.125, "Day": "Mon", "Hour": 11}, {"Avg_Cultural_Score": 2.25, "Sample_Size": 7, "Avg_Technical_Score": 1.75, "Day": "Mon", "Hour": 12}, {"Avg_Cultural_Score": 3.25, "Sample_Size": 5, "Avg_Technical_Score": 2.33333333333333, "Day": "Mon", "Hour": 13}, {"Avg_Cultural_Score": 2.20833333333333, "Sample_Size": 6, "Avg_Technical_Score": 2.29166666666667, "Day": "Mon", "Hour": 14}, {"Avg_Cultural_Score": 2.875, "Sample_Size": 5, "Avg_Technical_Score": 2.0, "Day": "Mon", "Hour": 15}, {"Avg_Cultural_Score": 2.5, "Sample_Size": 3, "Avg_Technical_Score": 2.375, "Day": "Mon", "Hour": 16}, {"Avg_Cultural_Score": 4.0, "Sample_Size": 3, "Avg_Technical_Score": 4.0, "Day": "Mon", "Hour": 17}, {"Avg_Cultural_Score": 3.25, "Sample_Size": 1, "Avg_Technical_Score": 4.0, "Day": "Tue", "Hour": 13}, {"Avg_Cultural_Score": 2.875, "Sample_Size": 8, "Avg_Technical_Score": 2.53125, "Day": "Tue", "Hour": 14}, {"Avg_Cultural_Score": 2.82692307692308, "Sample_Size": 15, "Avg_Technical_Score": 2.28571428571429, "Day": "Tue", "Hour": 15}, {"Avg_Cultural_Score": 3.19444444444444, "Sample_Size": 10, "Avg_Technical_Score": 2.90625, "Day": "Tue", "Hour": 16}, {"Avg_Cultural_Score": 2.82142857142857, "Sample_Size": 8, "Avg_Technical_Score": 3.0, "Day": "Tue", "Hour": 17}, {"Avg_Cultural_Score": 3.0, "Sample_Size": 1, "Avg_Technical_Score": 2.0, "Day": "Tue", "Hour": 18}, {"Avg_Cultural_Score": null, "Sample_Size": 1, "Avg_Technical_Score": null, "Day": "Wed", "Hour": 10}, {"Avg_Cultural_Score": 2.66666666666667, "Sample_Size": 4, "Avg_Technical_Score": 2.66666666666667, "Day": "Wed", "Hour": 11}, {"Avg_Cultural_Score": 2.3125, "Sample_Size": 4, "Avg_Technical_Score": 2.125, "Day": "Wed", "Hour": 12}, {"Avg_Cultural_Score": 2.35, "Sample_Size": 5, "Avg_Technical_Score": 2.9, "Day": "Wed", "Hour": 13}, {"Avg_Cultural_Score": 2.5, "Sample_Size": 7, "Avg_Technical_Score": 2.79166666666667, "Day": "Wed", "Hour": 14}, {"Avg_Cultural_Score": 2.6875, "Sample_Size": 4, "Avg_Technical_Score": 2.875, "Day": "Wed", "Hour": 15}, {"Avg_Cultural_Score": 2.66666666666667, "Sample_Size": 4, "Avg_Technical_Score": 2.66666666666667, "Day": "Wed", "Hour": 16}, {"Avg_Cultural_Score": 3.0, "Sample_Size": 4, "Avg_Technical_Score": 2.6875, "Day": "Wed", "Hour": 17}, {"Avg_Cultural_Score": 3.0, "Sample_Size": 1, "Avg_Technical_Score": 4.0, "Day": "Thu", "Hour": 10}, {"Avg_Cultural_Score": 2.5, "Sample_Size": 2, "Avg_Technical_Score": 2.375, "Day": "Thu", "Hour": 11}, {"Avg_Cultural_Score": 3.0, "Sample_Size": 1, "Avg_Technical_Score": 1.0, "Day": "Thu", "Hour": 12}, {"Avg_Cultural_Score": 2.0, "Sample_Size": 1, "Avg_Technical_Score": 2.0, "Day": "Thu", "Hour": 14}, {"Avg_Cultural_Score": 2.5, "Sample_Size": 2, "Avg_Technical_Score": 2.0, "Day": "Thu", "Hour": 15}, {"Avg_Cultural_Score": null, "Sample_Size": 1, "Avg_Technical_Score": null, "Day": "Fri", "Hour": 10}, {"Avg_Cultural_Score": 3.25, "Sample_Size": 6, "Avg_Technical_Score": 3.5, "Day": "Fri", "Hour": 11}, {"Avg_Cultural_Score": 3.16666666666667, "Sample_Size": 6, "Avg_Technical_Score": 2.9375, "Day": "Fri", "Hour": 12}, {"Avg_Cultural_Score": 2.53125, "Sample_Size": 9, "Avg_Technical_Score": 2.3125, "Day": "Fri", "Hour": 13}, {"Avg_Cultural_Score": 2.71428571428571, "Sample_Size": 10, "Avg_Technical_Score": 2.82142857142857, "Day": "Fri", "Hour": 14}, {"Avg_Cultural_Score": 3.02272727272727, "Sample_Size": 12, "Avg_Technical_Score": 2.65, "Day": "Fri", "Hour": 15}, {"Avg_Cultural_Score": 2.78125, "Sample_Size": 9, "Avg_Technical_Score": 2.64285714285714, "Day": "Fri", "Hour": 16}, {"Avg_Cultural_Score": 2.6, "Sample_Size": 6, "Avg_Technical_Score": 2.8, "Day": "Fri", "Hour": 17}])
         }

  function update_DayTimeMatrix(ajaxResult)
  {
    DayTimeMatrix=ajaxResult;
/*
          update_Chart_Data("Avg_Cultural_Score");
          update_chart("Avg_Cultural_Score");                
*/
          update_Chart_Data("Avg_Technical_Score");
          update_chart("Avg_Technical_Score");                
         };


       
        function parseIntOrLeaveString(stringValue)
        {
            var result = parseInt(stringValue);
            if (isNaN(result))
            {
                result = stringValue;
            }
            return result;
        }

        function get_keys(dict)
        {
            var keys = [];
            for(var k in dict) keys.push(parseIntOrLeaveString(k));
            return keys;
        }
    
   

        function update_Chart_Data(selected_score_of_interest)
        {
            max_score = -1;
            min_score = Number.MAX_VALUE;
            max_sample_size=0;
            score_of_interest=selected_score_of_interest;
            var times_of_day_dict = {};
            var days_of_week_dict = {};
            for (var i = 0; i < DayTimeMatrix.length; i++)
            {
                times_of_day_dict[DayTimeMatrix[i].Hour] = true;
                days_of_week_dict[DayTimeMatrix[i].Day] = true;
                if (DayTimeMatrix[i][score_of_interest] === null)
                    continue;
                if (DayTimeMatrix[i][score_of_interest] < min_score)
                {
                    min_score = DayTimeMatrix[i][score_of_interest];
                }
                else if(DayTimeMatrix[i][score_of_interest] > max_score)
                {
                    max_score = DayTimeMatrix[i][score_of_interest];
                }
                if (DayTimeMatrix[i]["Sample_Size"] > max_sample_size)
                {
                  max_sample_size=DayTimeMatrix[i]["Sample_Size"];
                }
            }
            TimeOfDay = get_keys(times_of_day_dict);
            TimeOfDay.sort(function(a, b)
            {
                return a - b;
            });
            DayOfWeek = get_keys(days_of_week_dict);
            DayOfWeek.sort(function(a, b)
            {
                return days_of_week[a] - days_of_week[b];
            });

          for (var i=0;i<DayOfWeek.length;i++)
            for (var j=0;j<TimeOfDay.length;j++)
            DayTimeMatrixFill.push({Day : DayOfWeek[i],Hour : TimeOfDay[j]});
            };  
        

 

     d3.selectAll("p")
            .on("click", function() 
    { 
            var paragraphID = d3.select(this).attr("id");
            if (paragraphID == "Cultural")
      {
                update_Chart_Data("Avg_Cultural_Score")  
                    update_chart("Avg_Cultural_Score")      
      } 
            if(paragraphID == "Technical") 
      {
                update_Chart_Data("Avg_Technical_Score")
                update_chart("Avg_Technical_Score") 
                  }
    });        

      
  function update_chart(score_of_interest)
  {

    var yScale = d3.scale.ordinal().domain(d3.range(TimeOfDay.length)).rangeRoundBands([padding, w - padding * 2],0.05);
    var xScale = d3.scale.ordinal().domain(d3.range(DayOfWeek.length)).rangeRoundBands([padding, h - padding],0.05); 
        //var xScale = d3.scale.ordinal().domain(d3.range(DayOfWeek.length).rangeRoundBands([padding, h - padding],0.05);
          var yTickScale = d3.scale.ordinal().domain(d3.range(TimeOfDay.length)).rangeRoundBands([padding, w - padding * 2]);
          var xTickScale =d3.scale.ordinal() .domain(d3.range(DayOfWeek.length)).rangeRoundBands([padding, h - padding]);
     
        //  Draw Axis
        
          var xAxis = d3.svg.axis().scale(xTickScale).orient("top").tickValues(DayOfWeek);
          var yAxis = d3.svg.axis().scale(yTickScale).orient("left").tickValues(TimeOfDay);
        //  svg.append("g").attr("class", "axis").attr("transform", "translate(0," + padding + ")").call(xAxis);     
        //  svg.append("g").attr("class", "axis").attr("transform", "translate(" + padding + ",0)").call(yAxis);                  

       // Add bars

        var barsfill = svg.selectAll("rect").data(DayTimeMatrixFill);
          barsfill
          .enter()
          .append("svg:image")
          .attr("xlink:href", "img/NoScore.png") 
          .attr("margin",0)
          .attr("y", function(d, i) {return yScale(TimeOfDay.indexOf(d.Hour));})
          .attr("x", function(d, i) {return xScale(DayOfWeek.indexOf(d.Day));}) 
          .attr("width", xScale.rangeBand())
          .attr("height", yScale.rangeBand())  ;
          // .append("svg:image")
          // .attr("xlink:href", "NoScore.png") ;
          
          
     var bars = svg.selectAll("rect").data(DayTimeMatrix);
          bars
          .enter()
          .append("rect")
          //.transition(100)
          .attr("y", function(d, i) {return yScale(TimeOfDay.indexOf(d.Hour));})
          .attr("x", function(d, i) {return xScale(DayOfWeek.indexOf(d.Day));})         
          .attr("width", xScale.rangeBand())
          .attr("height", yScale.rangeBand())
          .transition()
          .style("fill", function(d) {
              if (d[score_of_interest] === null)
              {
                return "rgba(0, 0, 0, 0)";
              }
              var color_offset = Math.round(((d[score_of_interest] - min_score)/(max_score - min_score)) * 255);
          //console.log(d);  
              var ret_value = "rgb(" + (255 - color_offset).toString()
                          + ","+(0 
                          + ", 0" + color_offset).toString()
                          + ")";
              return ret_value;
          })
          .duration(1000) 
          .delay(100)  
          ;

    

       

        }  

               

        </script>

    </body>
</html>   
